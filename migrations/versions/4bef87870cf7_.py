"""empty message

Revision ID: 4bef87870cf7
Revises: None
Create Date: 2016-02-03 09:09:37.882166

"""

# revision identifiers, used by Alembic.
revision = '4bef87870cf7'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country',
    sa.Column('id', sa.Unicode(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_country_id'), 'country', ['id'], unique=False)
    op.create_table('legend',
    sa.Column('id', sa.Unicode(), nullable=False),
    sa.Column('text', sa.UnicodeText(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_legend_id'), 'legend', ['id'], unique=False)
    op.create_table('photo',
    sa.Column('id', sa.Unicode(), nullable=False),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.Column('path', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_photo_id'), 'photo', ['id'], unique=False)
    op.create_table('person',
    sa.Column('id', sa.Unicode(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('second_name', sa.Unicode(), nullable=True),
    sa.Column('surname', sa.Unicode(), nullable=True),
    sa.Column('sex', sa.Unicode(), nullable=True),
    sa.Column('alive', sa.Boolean(), nullable=True),
    sa.Column('b_date', sa.Date(), nullable=True),
    sa.Column('d_date', sa.Date(), nullable=True),
    sa.Column('ava_id', sa.Unicode(), nullable=True),
    sa.Column('father_id', sa.Unicode(), nullable=True),
    sa.Column('mother_id', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['ava_id'], ['photo.id'], ),
    sa.ForeignKeyConstraint(['father_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['mother_id'], ['person.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_person_id'), 'person', ['id'], unique=False)
    op.create_table('country_dvellers',
    sa.Column('country_id', sa.Unicode(), nullable=True),
    sa.Column('person_id', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], )
    )
    op.create_table('legendparticipant',
    sa.Column('person_id', sa.Unicode(), nullable=True),
    sa.Column('legend_id', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['legend_id'], ['legend.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], )
    )
    op.create_table('photoparticipant',
    sa.Column('person_id', sa.Unicode(), nullable=True),
    sa.Column('photo_id', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['photo_id'], ['photo.id'], )
    )
    op.create_table('spouses',
    sa.Column('leftspouse_id', sa.Unicode(), nullable=True),
    sa.Column('rightspouse_id', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['leftspouse_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['rightspouse_id'], ['person.id'], )
    )
    op.create_table('users',
    sa.Column('id', sa.Unicode(), nullable=False),
    sa.Column('email', sa.Unicode(), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('second_name', sa.Unicode(), nullable=True),
    sa.Column('surname', sa.Unicode(), nullable=True),
    sa.Column('sex', sa.Unicode(), nullable=True),
    sa.Column('country_id', sa.Unicode(), nullable=True),
    sa.Column('b_date', sa.Date(), nullable=True),
    sa.Column('person_id', sa.Unicode(), nullable=True),
    sa.Column('is_new', sa.Boolean(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('family',
    sa.Column('id', sa.Unicode(), nullable=False),
    sa.Column('creator_id', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_family_creator_id'), 'family', ['creator_id'], unique=False)
    op.create_index(op.f('ix_family_id'), 'family', ['id'], unique=False)
    op.create_table('family_members',
    sa.Column('family_id', sa.Unicode(), nullable=True),
    sa.Column('person_id', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['family_id'], ['family.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], )
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('family_members')
    op.drop_index(op.f('ix_family_id'), table_name='family')
    op.drop_index(op.f('ix_family_creator_id'), table_name='family')
    op.drop_table('family')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('spouses')
    op.drop_table('photoparticipant')
    op.drop_table('legendparticipant')
    op.drop_table('country_dvellers')
    op.drop_index(op.f('ix_person_id'), table_name='person')
    op.drop_table('person')
    op.drop_index(op.f('ix_photo_id'), table_name='photo')
    op.drop_table('photo')
    op.drop_index(op.f('ix_legend_id'), table_name='legend')
    op.drop_table('legend')
    op.drop_index(op.f('ix_country_id'), table_name='country')
    op.drop_table('country')
    ### end Alembic commands ###
